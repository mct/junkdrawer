#!/usr/bin/env python2
# vim:set sw=4 ts=4 ai:

'''

Looks up a telephone number's NPANXX from localcallingguide.com, and prints
some of the more interesting information, such as which telco the prefix was
originally assigned.  For example:

$ npanxx 415-491-0130
>>> Looking up 415-491 at http://www.localcallingguide.com/xmlprefix.php?npa=415&nxx=491
             RC: San Rafael
         Region: CA
         Switch: SNRFCA11DS0
   Company-Name: PACIFIC BELL

'''

import sys
import re
import requests
import xml.etree.ElementTree as ET

baseurl = "https://www.localcallingguide.com/xmlprefix.php"

def parsenumber(s):
    digits = re.findall("(\d)", s)
    if digits[0] == '1':
        digits.pop(0)
    return [ "".join(digits[0:3]), "".join(digits[3:6]) ]

def lookup(npa, nxx):
    url = "%s?npa=%s&nxx=%s" % (baseurl, npa, nxx)
    print ">>> Looking up %s-%s at %s" % (npa, nxx, url)
    r = requests.get(url)
    root = ET.fromstring(r.text)

    info = {}

    for i in [ root.find('./prefixdata/npa'),
               root.find('./prefixdata/nxx'),
               root.find('./prefixdata/company-name'),
               root.find('./prefixdata/ilec-name'),
               root.find('./prefixdata/rc'),
               root.find('./prefixdata/region'),
               root.find('./prefixdata/switch') ]:
        info[i.tag] = i.text

    return info

if __name__ == "__main__":
    try:
        [npa, nxx] = parsenumber(" ".join(sys.argv[1:]))
        if len(npa) != 3 or len(nxx) != 3:
            raise
    except:
        print "Usage: %s <npa-nxx>" % sys.argv[0]
        sys.exit(0)

    info = lookup(npa,nxx)
    for i in ['RC', 'Region', 'Switch', 'Company-Name']:
        print "%15s: %s" % (i, info[i.lower()])
